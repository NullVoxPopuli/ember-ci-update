name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
   group: ci-${{ github.head_ref || github.ref }}
   cancel-in-progress: true

env:
  CI: true
  dist: <%- env.dist %>

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm

<% if (lint?.eslint) { %>
  eslint:
    name: ESLint {{ matrix.path }}
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    strategy:
      fail-fast: true
      matrix:
        path:
<%- utils.toMultiLineArray(lint.eslint, 5) %>
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Lint
        run: pnpm eslint .
        working-directory: ${{ matrix.path }}
<% } %>

<% if (lint?.cmd) { %>
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Lint
        run: <%= lint.cmd %>
<% } %>

<% if (lint?.commits) { %>
  commits:
    name: Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - uses: wagoid/commitlint-github-action@v4.1.9
        with:
          configFile: 'commitlint.config.cjs'
<% } %>

  build:
    name: Build Tests
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/assert-build

<% if (support?.typescript) { %>
  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [build]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
<%- utils.toMultiLineArray(support.typescript, 5) %>

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: <%= testApp %>
      - name: 'Type checking'
      <% if (support?.glint) { %>
        run: |
          pnpm --filter <%= testAppName %> exec tsc -v;
          pnpm --filter <%= testAppName %> exec glint --version;
          pnpm --filter <%= testAppName %> exec glint;
      <% } else { %>
          pnpm --filter <%= testAppName %> exec tsc -v;
          pnpm --filter <%= testAppName %> exec tsc --build;
      <% } %>

  <% } %>


  default_tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter <%= testAppName %> test:ember

  floating_tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - uses: ./.github/actions/download-built-package
      - run: pnpm --filter <%= testAppName %> test:ember

<% if (support?.['ember-try']) { %>
  try_scenarios:
    name: ${{ matrix.try-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [default_tests]

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
<%- utils.toMultiLineArray(tryScenarios, 5) %>

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Run Tests
        working-directory: <%= testApp %>
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
          --skip-cleanup

<% } %>

<% if (release?.semantic) { %>
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
<%- utils.toMultiLineArray(releaseRequirements, 3) %>

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: volta-cli/action@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Release
        run: ./node_modules/.bin/semantic-release
        working-directory: ./ember-resources
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
<% } %>

<% for (let extraJob of extra) { %>
  <%= extraJob.id %>:
    name: <%= extraJob.name %>
    runs-on: ubuntu-latest
    needs: <%= extraJob.needs %>
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: volta-cli/action@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
<%= extraJob.steps %>

<% } %>
